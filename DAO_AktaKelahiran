import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.HashMap;
import java.util.Map;
import java.io.File;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import model.aktaKelahiran_model;
import view.cetakAktaKelahiran;

public class DAO_AktaKelahiran {
    final protected String simpan = "insert into aktakelahiran (noAL, nikAL, wargaNegara, no, aturanStbld,"
                        + "tempatLahir, tglBlnLahir, thnLahir, jk, namaAnak, anakKe,"
                        + "namaSuami, namaIstri, drhPembuatanAL, tglBlnPembuatanAL, thnPembuatanAL,"
                        + "jabatan, namaPejabat, nip) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);";
    final protected String perbaharui = "update aktakelahiran set nikAL=?, wargaNegara=?, no=?, aturanStbld=?,"
                            + "tempatLahir=?, tglBlnLahir=?, thnLahir=?, jk=?, namaAnak=?, anakKe=?,"
                            + "namaSuami=?, namaIstri=?, drhPembuatanAL=?, tglBlnPembuatanAL=?, thnPembuatanAL=?,"
                            + "jabatan=?, namaPejabat=?, nip=? where noAL=? ;";
    final protected String hapus = "delete from aktakelahiran where noAL=? ;";
    final protected String pilih = "select * from aktakelahiran ;";
    final protected String cari = "select * from aktakelahiran where noAL like ?";
    final protected String batas = "select * from aktakelahiran limit ?,?";
    final protected String jumlah = "select count(noAL) from aktakelahiran";
    final protected String cetak = "select * from aktakelahiran ORDER BY noAL asc";
    
    private static Connection koneksi;
    private Statement pernyataan;
    public JasperPrint jasperPrint;
    public JasperReport jasperReport;
    public JasperDesign jasperDesign;
    public Map<String, Object> map = new HashMap<>();
    
    public DAO_AktaKelahiran(){
        koneksi=koneksiMySQL.getKoneksi();
    }
    
    public void simpan(aktaKelahiran_model aktaKelahiranModel){
    PreparedStatement pernyataanSiap = null;
    
    try
    {
        pernyataanSiap=koneksi.prepareStatement(simpan);
        pernyataanSiap.setString(1, aktaKelahiranModel.getNoAL());
        pernyataanSiap.setString(2, aktaKelahiranModel.getNIK());
        pernyataanSiap.setString(3, aktaKelahiranModel.getWargaNegara());
        pernyataanSiap.setString(4, aktaKelahiranModel.getNo());
        pernyataanSiap.setString(5, aktaKelahiranModel.getAturanStbld());
        pernyataanSiap.setString(6, aktaKelahiranModel.getTempatLahir());
        pernyataanSiap.setString(7, aktaKelahiranModel.getTanggalBulanLahir());
        pernyataanSiap.setString(8, aktaKelahiranModel.getTahunLahir());
        pernyataanSiap.setString(9, aktaKelahiranModel.getJenisKelamin());
        pernyataanSiap.setString(10, aktaKelahiranModel.getNamaAnak());
        pernyataanSiap.setString(11, aktaKelahiranModel.getAnakKe());
        pernyataanSiap.setString(12, aktaKelahiranModel.getNamaSuami());
        pernyataanSiap.setString(13, aktaKelahiranModel.getNamaIstri());
        pernyataanSiap.setString(14, aktaKelahiranModel.getDaerahPembuatanAL());
        pernyataanSiap.setString(15, aktaKelahiranModel.getTanggalBulanPembuatanAL());
        pernyataanSiap.setString(16, aktaKelahiranModel.getTahunPembuatanAL());
        pernyataanSiap.setString(17, aktaKelahiranModel.getJabatan());
        pernyataanSiap.setString(18, aktaKelahiranModel.getNamaPejabat());
        pernyataanSiap.setString(19, aktaKelahiranModel.getNip());
        pernyataanSiap.executeUpdate();
        ResultSet setHasil = pernyataanSiap.getResultSet();
        JOptionPane.showMessageDialog(null, "Data Kelahiran Berhasil Tersimpan");
    }
    catch (SQLException ex)
    {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Data gagal tersimpan");
    }
    finally
    {
        try
        {
            pernyataanSiap.close();
        }catch(SQLException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex);
        }
    }
}
    public void ubah(aktaKelahiran_model aktaKelahiranModel){
        PreparedStatement pernyataanSiap = null;
        
        try {
        pernyataanSiap=koneksi.prepareStatement(perbaharui);
        pernyataanSiap.setString(1, aktaKelahiranModel.getNoAL());
        pernyataanSiap.setString(2, aktaKelahiranModel.getNIK());
        pernyataanSiap.setString(3, aktaKelahiranModel.getWargaNegara());
        pernyataanSiap.setString(4, aktaKelahiranModel.getNo());
        pernyataanSiap.setString(5, aktaKelahiranModel.getAturanStbld());
        pernyataanSiap.setString(6, aktaKelahiranModel.getTempatLahir());
        pernyataanSiap.setString(7, aktaKelahiranModel.getTanggalBulanLahir());
        pernyataanSiap.setString(8, aktaKelahiranModel.getTahunLahir());
        pernyataanSiap.setString(9, aktaKelahiranModel.getJenisKelamin());
        pernyataanSiap.setString(10, aktaKelahiranModel.getNamaAnak());
        pernyataanSiap.setString(11, aktaKelahiranModel.getAnakKe());
        pernyataanSiap.setString(12, aktaKelahiranModel.getNamaSuami());
        pernyataanSiap.setString(13, aktaKelahiranModel.getNamaIstri());
        pernyataanSiap.setString(14, aktaKelahiranModel.getDaerahPembuatanAL());
        pernyataanSiap.setString(15, aktaKelahiranModel.getTanggalBulanPembuatanAL());
        pernyataanSiap.setString(16, aktaKelahiranModel.getTahunPembuatanAL());
        pernyataanSiap.setString(17, aktaKelahiranModel.getJabatan());
        pernyataanSiap.setString(18, aktaKelahiranModel.getNamaPejabat());
        pernyataanSiap.setString(19, aktaKelahiranModel.getNip());
        pernyataanSiap.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data Kelahiran Berhasil diperbaharui");
        } catch (SQLException ex) {
            ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Data gagal diperbaharui");
        }finally{
            try{
                pernyataanSiap.close();
            }catch(SQLException ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }
  
    public void hapus(String csl){
        PreparedStatement pernyataanSiap = null;
        try{
            pernyataanSiap = koneksi.prepareStatement(hapus);
            pernyataanSiap.setString(1, csl);
            pernyataanSiap.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
        }catch(SQLException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Data gagal dihapus");
        }finally{
            try{
                pernyataanSiap.close();
            }catch(SQLException ex){
                ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex);
            }
        }
    }
    
    public List<aktaKelahiran_model> getDaftar(){
        List<aktaKelahiran_model> daftarAktaKelahiran = null;
        try{
            daftarAktaKelahiran = new ArrayList<>();
            pernyataan = koneksi.createStatement();
            ResultSet setHasil = pernyataan.executeQuery(pilih);
            while(setHasil.next()){
                aktaKelahiran_model aktaKelahiranModel = new aktaKelahiran_model();
                aktaKelahiranModel.setNoAL(setHasil.getString("noAL"));
                aktaKelahiranModel.setNIK(setHasil.getString("nikAL"));
                aktaKelahiranModel.setWargaNegara(setHasil.getString("wargaNegara"));
                aktaKelahiranModel.setNo(setHasil.getString("no"));
                aktaKelahiranModel.setAturanStbld(setHasil.getString("aturanStbld"));
                aktaKelahiranModel.setTempatLahir(setHasil.getString("tempatLahir"));
                aktaKelahiranModel.setTanggalBulanLahir(setHasil.getString("tglBlnLahir"));
                aktaKelahiranModel.setTahunLahir(setHasil.getString("thnLahir"));
                aktaKelahiranModel.setJenisKelamin(setHasil.getString("jk"));
                aktaKelahiranModel.setNamaAnak(setHasil.getString("namaAnak"));
                aktaKelahiranModel.setAnakKe(setHasil.getString("anakKe"));
                aktaKelahiranModel.setNamaSuami(setHasil.getString("namaSuami"));
                aktaKelahiranModel.setNamaIstri(setHasil.getString("namaIstri"));
                aktaKelahiranModel.setDaerahPembuatanAL(setHasil.getString("drhPembuatanAL"));
                aktaKelahiranModel.setTanggalBulanPembuatanAL(setHasil.getString("tglBlnPembuatanAL"));
                aktaKelahiranModel.setTahunPembuatanAL(setHasil.getString("thnPembuatanAL"));
                aktaKelahiranModel.setJabatan(setHasil.getString("jabatan"));
                aktaKelahiranModel.setNamaPejabat(setHasil.getString("namaPejabat"));
                aktaKelahiranModel.setNip(setHasil.getString("nip"));
                daftarAktaKelahiran.add(aktaKelahiranModel);
            }
        }catch(SQLException ex){
            Logger.getLogger(DAO_AktaKelahiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        return daftarAktaKelahiran;
    }
    
     public List<aktaKelahiran_model> getCariData(String csl){
        List<aktaKelahiran_model>daftarAktaKelahiran = null;
        try{
            daftarAktaKelahiran = new ArrayList<>();
            PreparedStatement pertanyaanSiap = koneksi.prepareStatement(cari);
            pertanyaanSiap.setString(1, "%" + csl + "%");
            ResultSet setHasil = pertanyaanSiap.executeQuery();
            while(setHasil.next()){
               aktaKelahiran_model aktaKelahiranModel = new aktaKelahiran_model();
               aktaKelahiranModel.setNoAL(setHasil.getString("noAL"));
               aktaKelahiranModel.setNIK(setHasil.getString("nikAL"));
               aktaKelahiranModel.setWargaNegara(setHasil.getString("wargaNegara"));
               aktaKelahiranModel.setNo(setHasil.getString("no"));
                aktaKelahiranModel.setAturanStbld(setHasil.getString("aturanStbld"));
                aktaKelahiranModel.setTempatLahir(setHasil.getString("tempatLahir"));
                aktaKelahiranModel.setTanggalBulanLahir(setHasil.getString("tglBlnLahir"));
                aktaKelahiranModel.setTahunLahir(setHasil.getString("thnLahir"));
                aktaKelahiranModel.setJenisKelamin(setHasil.getString("jk"));
                aktaKelahiranModel.setNamaAnak(setHasil.getString("namaAnak"));
                aktaKelahiranModel.setAnakKe(setHasil.getString("anakKe"));
                aktaKelahiranModel.setNamaSuami(setHasil.getString("namaSuami"));
                aktaKelahiranModel.setNamaIstri(setHasil.getString("namaIstri"));
                aktaKelahiranModel.setDaerahPembuatanAL(setHasil.getString("drhPembuatanAL"));
                aktaKelahiranModel.setTanggalBulanPembuatanAL(setHasil.getString("tglBlnPembuatanAL"));
                aktaKelahiranModel.setTahunPembuatanAL(setHasil.getString("thnPembuatanAL"));
                aktaKelahiranModel.setJabatan(setHasil.getString("jabatan"));
                aktaKelahiranModel.setNamaPejabat(setHasil.getString("namaPejabat"));
                aktaKelahiranModel.setNip(setHasil.getString("nip"));
                daftarAktaKelahiran.add(aktaKelahiranModel);
            }
        }catch(SQLException ex){
            Logger.getLogger(DAO_AktaKelahiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        return daftarAktaKelahiran;
    }
     
     public List<aktaKelahiran_model> getHalaman(int pageSize, int currentPage){
        List<aktaKelahiran_model>daftarAktaKelahiran = null;
        
        try{
            daftarAktaKelahiran = new ArrayList<>();
            PreparedStatement pertanyaanSiap = koneksi.prepareStatement(batas);
            pertanyaanSiap.setInt(1, currentPage*(pageSize-1));
            pertanyaanSiap.setInt(2, pageSize);
            ResultSet setHasil = pertanyaanSiap.executeQuery();
            while(setHasil.next()){
               aktaKelahiran_model aktaKelahiranModel = new aktaKelahiran_model();
               aktaKelahiranModel.setNoAL(setHasil.getString("noAL"));
               aktaKelahiranModel.setNIK(setHasil.getString("nikAL"));
               aktaKelahiranModel.setWargaNegara(setHasil.getString("wargaNegara"));
               aktaKelahiranModel.setNo(setHasil.getString("no"));
               aktaKelahiranModel.setAturanStbld(setHasil.getString("aturanStbld"));
               aktaKelahiranModel.setTempatLahir(setHasil.getString("tempatLahir"));
               aktaKelahiranModel.setTanggalBulanLahir(setHasil.getString("tglBlnLahir"));
               aktaKelahiranModel.setTahunLahir(setHasil.getString("thnLahir"));
               aktaKelahiranModel.setJenisKelamin(setHasil.getString("jk"));
               aktaKelahiranModel.setNamaAnak(setHasil.getString("namaAnak"));
               aktaKelahiranModel.setAnakKe(setHasil.getString("anakKe"));
               aktaKelahiranModel.setNamaSuami(setHasil.getString("namaSuami"));
               aktaKelahiranModel.setNamaIstri(setHasil.getString("namaIstri"));
               aktaKelahiranModel.setDaerahPembuatanAL(setHasil.getString("drhPembuatanAL"));
               aktaKelahiranModel.setTanggalBulanPembuatanAL(setHasil.getString("tglBlnPembuatanAL"));
               aktaKelahiranModel.setTahunPembuatanAL(setHasil.getString("thnPembuatanAL"));
               aktaKelahiranModel.setJabatan(setHasil.getString("jabatan"));
               aktaKelahiranModel.setNamaPejabat(setHasil.getString("namaPejabat"));
               aktaKelahiranModel.setNip(setHasil.getString("nip"));
               daftarAktaKelahiran.add(aktaKelahiranModel);
            }
        }catch(SQLException ex){
            Logger.getLogger(DAO_AktaKelahiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        return daftarAktaKelahiran;
    }
     
     public Integer jumlah(){
         int jumlahBaris = 0;
        PreparedStatement pernyataanSiap = null;
        try{
            pernyataanSiap = koneksi.prepareStatement(jumlah);
            ResultSet setHasil = pernyataanSiap.executeQuery();
            while(setHasil.next()){
                jumlahBaris=setHasil.getInt("count(noAL)");
            }
        }catch(SQLException ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex);
        }finally{
            try{
                pernyataanSiap.close();
            }catch(SQLException ex){
                ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex);
            }
        }
        return jumlahBaris;
    }
     
     public void bacaNoAL(cetakAktaKelahiran cal){
         try {
             PreparedStatement pernyataanSiap = koneksi.prepareStatement(cetak);
             ResultSet setHasil = pernyataanSiap.executeQuery();
             while(setHasil.next()){
                 cal.getTxtCetak().setText(setHasil.getString("noAL"));
             }
         } catch (SQLException ex) {
             Logger.getLogger(DAO_AktaKelahiran.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
     
     public void cetak(cetakAktaKelahiran cal){
         try {
             File file = new File("src/report/aktaKelahiran.jrxml");
             jasperDesign = JRXmlLoader.load(file);
             map.put("noAL", cal.getTxtCetak().getText());
             jasperReport = JasperCompileManager.compileReport(jasperDesign);
             jasperPrint = JasperFillManager.fillReport(jasperReport, map, koneksi);
             JasperViewer.viewReport(jasperPrint, false);
         } catch (Exception ex) {
            Logger.getLogger(DAO_AktaKelahiran.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
}
